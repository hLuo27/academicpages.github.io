N = 1000
p = 0.5
z = rbinom(N, 1, p) + 1
table(z)
set.seed(42)
z = rbinom(N, 1, p) + 1
data.frame(z = z)
rnorm(1,1,0)
set.seed(42)
rnorm(1,1,0
)
set.seed(42)
rnorm(1)
set.seed(42)
rnorm(1)
set.seed(42)
rnorm(1)
set.seed(42)
rnorm(1)
table(z)
table(z)[1]
x1 = rnorm(1, mean = 1, sd = 1)
table(z)[[1]]
num_z_1 = table(z)[[1]]
num_z_2 = table(z)[[2]]
set.seed(42)
x1 = 0.5*rnorm(num_z_1, mean = 1, sd = 1)
x2 = 0.5*rnorm(num_z_1, mean = 1, sd = 1)
set.seed(42)
x1 = 0.5*rnorm(num_z_1, mean = 1, sd = 1)
x2 = 0.5*rnorm(num_z_1, mean = 1, sd = 1)
set.seed(42)
x1 = 0.5*rnorm(num_z_1, mean = 1, sd = 1)
x2 = 0.5*rnorm(num_z_1, mean = 1, sd = 1)
set.seed(42)
x1_1 = 0.5*rnorm(num_z_1, mean = 1, sd = 1)
x1_2 = 0.5*rnorm(num_z_1, mean = 1, sd = 1)
x2_1 = 0.5*rnorm(num_z_2, mean = -2, sd = 1)
x2_2 = 0.5*rnorm(num_z_2, mean = 2, sd = 1)
set.seed(42)
x1_1 = 0.5*rnorm(num_z_1, mean = 1, sd = 1)
x1_2 = 0.5*rnorm(num_z_1, mean = 1, sd = 1)
x2_1 = 0.5*rnorm(num_z_2, mean = -2, sd = 1)
x2_2 = 0.5*rnorm(num_z_2, mean = 2, sd = 1)
z[z == 1]
z == 1
overall_df = data.frame(z)
x1_1 = 0.5*rnorm(num_z_1, mean = 1, sd = 1)
x2_1 = 0.5*rnorm(num_z_1, mean = 1, sd = 1)
x1_2 = 0.5*rnorm(num_z_2, mean = -2, sd = 1)
x2_2 = 0.5*rnorm(num_z_2, mean = 2, sd = 1)
N = 1000
p = 0.5
set.seed(42)
z = rbinom(N, 1, p) + 1
num_z_1 = table(z)[[1]]
num_z_2 = table(z)[[2]]
set.seed(42)
x1_1 = 0.5*rnorm(num_z_1, mean = 1, sd = 1)
x2_1 = 0.5*rnorm(num_z_1, mean = 1, sd = 1)
x1_2 = 0.5*rnorm(num_z_2, mean = -2, sd = 1)
x2_2 = 0.5*rnorm(num_z_2, mean = 2, sd = 1)
N = 1000
p = 0.5
set.seed(42)
z = rbinom(N, 1, p) + 1
num_z_1 = table(z)[[1]]
num_z_2 = table(z)[[2]]
set.seed(42)
x1_1 = 0.5*rnorm(num_z_1, mean = 1, sd = 1)
x2_1 = 0.5*rnorm(num_z_1, mean = 1, sd = 1)
x1_2 = 0.5*rnorm(num_z_2, mean = -2, sd = 1)
x2_2 = 0.5*rnorm(num_z_2, mean = 2, sd = 1)
overall_df = data.frame(z)
overall_df$x1 = rep(0,N)
overall_df
overall_df$x1[z == 1] = x1_1
overall_df
overall_df$x1 = rep(0,N)
overall_df$x1[z == 1] = x1_1
overall_df$x1[z == 2] = x1_2
overall_df$x2 = rep(0,N)
overall_df$x2[z == 1] = x2_1
overall_df$x2[z == 2] = x2_2
overall_df
library(ggplot2)
ggplot(data = overall_df) +
geom_point(aes(x = x1, y = x2, col = z))
ggplot(data = overall_df) +
geom_point(aes(x = x1, y = x2, col = as.factor(z)))
ggplot(data = overall_df) +
geom_point(aes(x = x1, y = x2, col = as.factor(z))) +
title('Scatterplot of Generated Data with Colour Based on z')
ggplot(data = overall_df) +
geom_point(aes(x = x1, y = x2, col = as.factor(z))) +
title('Scatterplot of Generated Data with Colour Based on z')
ggplot(data = overall_df) +
geom_point(aes(x = x1, y = x2, col = as.factor(z))) +
ggtitle('Scatterplot of Generated Data with Colour Based on z')
kmeans(overall_df[,2:3], 2)
k2 = kmeans(overall_df[,2:3], 2)
print(k2)
k2$centers
library(mclust)
install.packages("mclust")
library(mclust)
em(overall_df[,2:3], G = 2)
em( G = 2, overall_df[,2:3])
MClust(overall_df[,2:3], G = 2)
Mclust(overall_df[,2:3], G = 2)
em2 = Mclust(overall_df[,2:3], G = 2)
em2$call
em2$classification
em2$parameters
em2$parameters$mean
k2$centers
